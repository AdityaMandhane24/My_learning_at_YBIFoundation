# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UZnhukf_nUaICil333Y-bW6s_Oejy2a5
"""

# import library
import pandas as pd

# import data
cement = pd.read_csv('https://github.com/ybifoundation/Dataset/raw/main/Concrete%20Compressive%20Strength.csv')

# view data
cement.head()

# info of data
cement.info()

# summary statistics
cement.describe()



# check for missing value
cement.isnull().sum()

# check for categories
cement.nunique()

# visualize pairplot
import seaborn as sns

sns.pairplot(cement)

# columns name
cement.columns

# define y
y=cement['Concrete Compressive Strength(MPa, megapascals) ']

# define X
X=cement[['Cement (kg in a m^3 mixture)',
       'Blast Furnace Slag (kg in a m^3 mixture)',
       'Fly Ash (kg in a m^3 mixture)', 'Water (kg in a m^3 mixture)',
       'Superplasticizer (kg in a m^3 mixture)',
       'Coarse Aggregate (kg in a m^3 mixture)',
       'Fine Aggregate (kg in a m^3 mixture)', 'Age (day)']]

# impot function
from sklearn.model_selection import train_test_split

# split data
# split y and x into train and test data
X_train, X_test,y_train, y_test = train_test_split(X,y, train_size=0.7,random_state=2529)

# verify shape
# check shape of train and test sample
X_train.shape, X_test.shape,y_train.shape , y_test.shape

# select model
from sklearn.linear_model import LinearRegression
model = LinearRegression()

# train model
model.fit(X_train , y_train)

cement.corr()

# predict with model
y_pred = model.predict(X_test)

# model evaluation
from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, mean_squared_error

# model MAE
mean_absolute_error(y_test,y_pred)

# model MAPE
mean_absolute_percentage_error(y_test,y_pred)

# model MSE
mean_squared_error(y_test,y_pred)

# future prediction
X.sample()

# define X_new
X_new = X.sample()
X_new.sample()

# predict for X_new
model.predict(X_new)

